buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.openapitools:openapi-generator-gradle-plugin:7.0.1"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.challenge'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

apply plugin: "org.openapi.generator"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.1.0'
	implementation 'org.springdoc:springdoc-openapi-starter-common:2.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
	implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'

	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-r2dbc', version: '3.1.0'
	implementation group: 'org.postgresql', name: 'r2dbc-postgresql', version: '1.0.1.RELEASE'
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'
	implementation group: 'org.flywaydb', name: 'flyway-core', version: '8.0.5'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register('buildSpringServer', org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/openapi.yaml".toString()
	outputDir = "$buildDir/generated".toString()
	apiPackage = "com.challenge.customer"
	modelPackage = "com.challenge.customer.server.models"
	library = "spring-boot"
	configOptions = [
			useSpringBoot3: "true",
			serializableModel: "true",
			dateLibrary: "java8",
			openApiNullable: "false",
			configPackage: "com.challenge.customer",
			sourceFolder: "src/main/java",
			basePackage: "com.challenge",
			interfaceOnly: "true"
	]
}

compileJava.dependsOn buildSpringServer

sourceSets.main.java.srcDirs = ["$buildDir/generated/src/main/java", "src/main/java"]

tasks.named('test') {
	useJUnitPlatform()
}


